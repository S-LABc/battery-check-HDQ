def calculate_lsb_checksum(data):
    total = sum(data)  # Byte değerlerini topla
    lsb = total % 256   # Toplamın LSB'sini hesapla
    complement = 255 - lsb  # Tamamlayıcı değeri hesapla
    return complement

def calculate_8bit_checksum(blockData):
    eightBitSum = sum(blockData) & 0xFF
    result = 255 - eightBitSum
    return result
blockb=[0xF8, 0x59, 0x5C, 0x35, 0x30, 0x32, 0x30, 0x41, 0x4C, 0x42, 0x48, 0x38, 0x36, 0x43, 0x42, 0x52]
veri= [ 0x46, 0x38, 0x59, 0x30, 0x35, 0x30, 0x32, 0x30, 0x41, 0x4C, 0x42, 0x48, 0x38, 0x36, 0x43, 0x42, 0x52, 0xD6, 0x52, 0x53, 0x41, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ]
blockData = [0x01, 0x23, 0x45, 0x67, 0x89, 0xAB, 0xCD, 0xEF, 0xFE, 0xDC, 0xBA, 0x98, 0x76, 0x54, 0x32, 0x10]
eightBitSum=calculate_8bit_checksum(blockb)
lsb_checksum=calculate_lsb_checksum(blockb)

print("8-bit Summation:", eightBitSum)
print("8-bit Summation (Hex):", hex(eightBitSum))
print("8-bit Summation (ASCII):", chr(eightBitSum))

print("LSB Summation:", lsb_checksum)
print("LSB Summation (Hex):", hex(lsb_checksum))
print("LSB Summation (ASCII):", chr(lsb_checksum))